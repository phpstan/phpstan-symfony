<?php

namespace Symfony\Component\Security\Core\Authorization\Voter;

use Symfony\Component\Security\Core\Authentication\Token\TokenInterface;

/**
 * @template TAttribute of string
 * @template TSubject of mixed
 */
abstract class Voter implements VoterInterface
{
    /**
     * Determines if the attribute and subject are supported by this voter.
     *
     * @param mixed $subject
     *
     * @phpstan-assert-if-true TSubject $subject
     * @phpstan-assert-if-true TAttribute $attribute
     *
     * @return bool
     */
    abstract protected function supports(string $attribute, $subject);

    /**
     * Perform a single access check operation on a given attribute, subject and token.
     * It is safe to assume that $attribute and $subject already passed the "supports()" method check.
     *
     * @phpstan-param TAttribute $attribute
     * @phpstan-param TSubject $subject
     *
     * @return bool
     */
    abstract protected function voteOnAttribute(string $attribute, $subject, TokenInterface $token);
}
