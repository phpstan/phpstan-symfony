parameters:
	dynamicConstantNames:
		- Symfony\Component\HttpKernel\Kernel::VERSION_ID
	exceptions:
		uncheckedExceptionClasses:
			- 'Symfony\Component\Console\Exception\InvalidArgumentException'
	symfony:
		container_xml_path: null
		constant_hassers: true
		console_application_loader: null
	stubFiles:
		- stubs/Symfony/Component/Form/ChoiceList/Loader/ChoiceLoaderInterface.stub
		- stubs/Symfony/Component/DependencyInjection/ContainerBuilder.stub
		- stubs/Symfony/Component/DependencyInjection/Extension/ExtensionInterface.stub
		- stubs/Symfony/Component/EventDispatcher/EventDispatcherInterface.stub
		- stubs/Symfony/Component/EventDispatcher/EventSubscriberInterface.stub
		- stubs/Symfony/Component/EventDispatcher/GenericEvent.stub
		- stubs/Symfony/Component/Form/FormBuilderInterface.stub
		- stubs/Symfony/Component/Form/FormInterface.stub
		- stubs/Symfony/Component/Form/FormTypeExtensionInterface.stub
		- stubs/Symfony/Component/Form/FormTypeInterface.stub
		- stubs/Symfony/Component/Form/FormView.stub
		- stubs/Symfony/Component/HttpFoundation/Cookie.stub
		- stubs/Symfony/Component/HttpFoundation/HeaderBag.stub
		- stubs/Symfony/Component/HttpFoundation/ParameterBag.stub
		- stubs/Symfony/Component/HttpFoundation/Session.stub
		- stubs/Symfony/Component/Process/Process.stub
		- stubs/Symfony/Component/PropertyAccess/PropertyPathInterface.stub
		- stubs/Symfony/Component/Security/Acl/Model/AclInterface.stub
		- stubs/Symfony/Component/Security/Acl/Model/EntryInterface.stub
		- stubs/Symfony/Component/Serializer/Encoder/ContextAwareDecoderInterface.stub
		- stubs/Symfony/Component/Serializer/Encoder/DecoderInterface.stub
		- stubs/Symfony/Component/Serializer/Encoder/EncoderInterface.stub
		- stubs/Symfony/Component/Serializer/Normalizer/ContextAwareDenormalizerInterface.stub
		- stubs/Symfony/Component/Serializer/Normalizer/ContextAwareNormalizerInterface.stub
		- stubs/Symfony/Component/Serializer/Normalizer/DenormalizableInterface.stub
		- stubs/Symfony/Component/Serializer/Normalizer/DenormalizerInterface.stub
		- stubs/Symfony/Component/Serializer/Normalizer/NormalizableInterface.stub
		- stubs/Symfony/Component/Serializer/Normalizer/NormalizerInterface.stub
		- stubs/Symfony/Component/Validator/Constraint.stub
		- stubs/Symfony/Component/Validator/ConstraintViolationInterface.stub
		- stubs/Symfony/Component/Validator/ConstraintViolationListInterface.stub
		- stubs/Twig/Node/Node.stub

parametersSchema:
	symfony: structure([
		container_xml_path: schema(string(), nullable())
		constant_hassers: bool()
		console_application_loader: schema(string(), nullable())
	])

services:
	# console resolver
	-
		factory: PHPStan\Symfony\ConsoleApplicationResolver
		arguments:
		    consoleApplicationLoader: %symfony.console_application_loader%

	# service map
	symfony.serviceMapFactory:
		class: PHPStan\Symfony\ServiceMapFactory
		factory: PHPStan\Symfony\XmlServiceMapFactory(%symfony.container_xml_path%)
	-
		factory: @symfony.serviceMapFactory::create()

	# parameter map
	symfony.parameterMapFactory:
		class: PHPStan\Symfony\ParameterMapFactory
		factory: PHPStan\Symfony\XmlParameterMapFactory(%symfony.container_xml_path%)
	-
		factory: @symfony.parameterMapFactory::create()

	# ControllerTrait::get()/has() return type
	-
		factory: PHPStan\Type\Symfony\ServiceDynamicReturnTypeExtension(Symfony\Component\DependencyInjection\ContainerInterface, %symfony.constant_hassers%)
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
	-
		factory: PHPStan\Type\Symfony\ServiceDynamicReturnTypeExtension(Psr\Container\ContainerInterface, %symfony.constant_hassers%)
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
	-
		factory: PHPStan\Type\Symfony\ServiceDynamicReturnTypeExtension(Symfony\Bundle\FrameworkBundle\Controller\Controller, %symfony.constant_hassers%)
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
	-
		factory: PHPStan\Type\Symfony\ServiceDynamicReturnTypeExtension(Symfony\Bundle\FrameworkBundle\Controller\AbstractController, %symfony.constant_hassers%)
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

	# ControllerTrait::has() type specification
	-
		factory: PHPStan\Type\Symfony\ServiceTypeSpecifyingExtension(Symfony\Component\DependencyInjection\ContainerInterface)
		tags: [phpstan.typeSpecifier.methodTypeSpecifyingExtension]
	-
		factory: PHPStan\Type\Symfony\ServiceTypeSpecifyingExtension(Psr\Container\ContainerInterface)
		tags: [phpstan.typeSpecifier.methodTypeSpecifyingExtension]
	-
		factory: PHPStan\Type\Symfony\ServiceTypeSpecifyingExtension(Symfony\Bundle\FrameworkBundle\Controller\Controller)
		tags: [phpstan.typeSpecifier.methodTypeSpecifyingExtension]
	-
		factory: PHPStan\Type\Symfony\ServiceTypeSpecifyingExtension(Symfony\Bundle\FrameworkBundle\Controller\AbstractController)
		tags: [phpstan.typeSpecifier.methodTypeSpecifyingExtension]

	# Request::getContent() return type
	-
		factory: PHPStan\Type\Symfony\RequestDynamicReturnTypeExtension
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

	# Request::getSession() type specification
	-
		factory: PHPStan\Type\Symfony\RequestTypeSpecifyingExtension
		tags: [phpstan.typeSpecifier.methodTypeSpecifyingExtension]

	# InputBag::get() return type
	-
		factory: PHPStan\Type\Symfony\InputBagDynamicReturnTypeExtension
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

	# HeaderBag::get() return type
	-
		factory: PHPStan\Type\Symfony\HeaderBagDynamicReturnTypeExtension
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

	# SerializerInterface::deserialize() return type
	-
		factory: PHPStan\Type\Symfony\SerializerDynamicReturnTypeExtension(Symfony\Component\Serializer\SerializerInterface, deserialize)
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

	# DenormalizerInterface::denormalize() return type
	-
		factory: PHPStan\Type\Symfony\SerializerDynamicReturnTypeExtension(Symfony\Component\Serializer\Normalizer\DenormalizerInterface, denormalize)
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

	# Envelope::all() return type
	-
		factory: PHPStan\Type\Symfony\EnvelopeReturnTypeExtension
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

	# InputInterface::getArgument() return type
	-
		factory: PHPStan\Type\Symfony\InputInterfaceGetArgumentDynamicReturnTypeExtension
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

	# InputInterface::hasArgument() type specification
	-
		factory: PHPStan\Type\Symfony\ArgumentTypeSpecifyingExtension
		tags: [phpstan.typeSpecifier.methodTypeSpecifyingExtension]

	# InputInterface::hasArgument() return type
	-
		factory: PHPStan\Type\Symfony\InputInterfaceHasArgumentDynamicReturnTypeExtension
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

	# InputInterface::getOption() return type
	-
		factory: PHPStan\Type\Symfony\InputInterfaceGetOptionDynamicReturnTypeExtension
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

	# InputInterface::hasOption() type specification
	-
		factory: PHPStan\Type\Symfony\OptionTypeSpecifyingExtension
		tags: [phpstan.typeSpecifier.methodTypeSpecifyingExtension]

	# InputInterface::hasOption() return type
	-
		factory: PHPStan\Type\Symfony\InputInterfaceHasOptionDynamicReturnTypeExtension
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

	# ArrayNodeDefinition::*prototype() return type
	-
		factory: PHPStan\Type\Symfony\Config\ArrayNodeDefinitionPrototypeDynamicReturnTypeExtension
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

	# ExprBuilder::end() return type
	-
		factory: PHPStan\Type\Symfony\Config\ReturnParentDynamicReturnTypeExtension
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
		arguments:
		    className: Symfony\Component\Config\Definition\Builder\ExprBuilder
		    methods: [end]

	# NodeBuilder::*node() return type
	-
		factory: PHPStan\Type\Symfony\Config\PassParentObjectDynamicReturnTypeExtension
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
		arguments:
		    className: Symfony\Component\Config\Definition\Builder\NodeBuilder
		    methods: [arrayNode, scalarNode, booleanNode, integerNode, floatNode, enumNode, variableNode]

	# NodeBuilder::end() return type
	-
		factory: PHPStan\Type\Symfony\Config\ReturnParentDynamicReturnTypeExtension
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
		arguments:
		    className: Symfony\Component\Config\Definition\Builder\NodeBuilder
		    methods: [end]

	# NodeDefinition::children() return type
	-
		factory: PHPStan\Type\Symfony\Config\PassParentObjectDynamicReturnTypeExtension
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
		arguments:
		    className: Symfony\Component\Config\Definition\Builder\NodeDefinition
		    methods: [children, validate, beforeNormalization]

	# NodeDefinition::end() return type
	-
		factory: PHPStan\Type\Symfony\Config\ReturnParentDynamicReturnTypeExtension
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
		arguments:
		    className: Symfony\Component\Config\Definition\Builder\NodeDefinition
		    methods: [end]

	# new TreeBuilder() return type
	-
		factory: PHPStan\Type\Symfony\Config\TreeBuilderDynamicReturnTypeExtension
		tags: [phpstan.broker.dynamicStaticMethodReturnTypeExtension]

	# TreeBuilder::getRootNode() return type
	-
		factory: PHPStan\Type\Symfony\Config\TreeBuilderGetRootNodeDynamicReturnTypeExtension
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

	# KernelInterface::locateResource() return type
	-
		class: PHPStan\Type\Symfony\KernelInterfaceDynamicReturnTypeExtension
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

	# ParameterBagInterface::get()/has() return type
	-
		factory: PHPStan\Type\Symfony\ParameterDynamicReturnTypeExtension(Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface, 'get', 'has', %symfony.constant_hassers%)
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

	# ContainerInterface::getParameter()/hasParameter() return type
	-
		factory: PHPStan\Type\Symfony\ParameterDynamicReturnTypeExtension(Symfony\Component\DependencyInjection\ContainerInterface, 'getParameter', 'hasParameter', %symfony.constant_hassers%)
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

	# (Abstract)Controller::getParameter() return type
	-
		factory: PHPStan\Type\Symfony\ParameterDynamicReturnTypeExtension(Symfony\Bundle\FrameworkBundle\Controller\AbstractController, 'getParameter', null, %symfony.constant_hassers%)
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
	-
		factory: PHPStan\Type\Symfony\ParameterDynamicReturnTypeExtension(Symfony\Bundle\FrameworkBundle\Controller\Controller, 'getParameter', null, %symfony.constant_hassers%)
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
